name: Auto Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    # Only run on main branch push (not on release commits)
    if: "!contains(github.event.head_commit.message, 'chore(release)')"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install semantic-release plugins
        run: |
          npm install -g \
            semantic-release \
            @semantic-release/git \
            @semantic-release/github \
            @semantic-release/changelog \
            @semantic-release/exec \
            conventional-changelog-conventionalcommits

      - name: Create semantic-release config
        run: |
          cat > .releaserc.json << 'EOF'
          {
            "branches": ["main"],
            "plugins": [
              [
                "@semantic-release/commit-analyzer",
                {
                  "preset": "conventionalcommits",
                  "releaseRules": [
                    {"breaking": true, "release": "major"},
                    {"revert": true, "release": "patch"},
                    {"type": "feat", "release": "minor"},
                    {"type": "fix", "release": "patch"},
                    {"type": "perf", "release": "patch"},
                    {"type": "docs", "scope": "README", "release": "patch"}
                  ]
                }
              ],
              [
                "@semantic-release/release-notes-generator",
                {
                  "preset": "conventionalcommits",
                  "presetConfig": {
                    "types": [
                      {"type": "feat", "section": "✨ Features"},
                      {"type": "fix", "section": "🐛 Bug Fixes"},
                      {"type": "perf", "section": "⚡ Performance"},
                      {"type": "revert", "section": "⏪ Reverts"},
                      {"type": "docs", "section": "📚 Documentation"},
                      {"type": "style", "section": "💅 Style"},
                      {"type": "refactor", "section": "♻️ Refactoring"},
                      {"type": "test", "section": "✅ Tests"},
                      {"type": "build", "section": "📦 Build"},
                      {"type": "ci", "section": "👷 CI"}
                    ]
                  }
                }
              ],
              [
                "@semantic-release/changelog",
                {
                  "changelogFile": "CHANGELOG.md"
                }
              ],
              [
                "@semantic-release/exec",
                {
                  "prepareCmd": "bash .github/scripts/update-files.sh ${nextRelease.version}"
                }
              ],
              [
                "@semantic-release/git",
                {
                  "assets": [
                    "CHANGELOG.md",
                    "Formula/tada.rb",
                    "VERSION",
                    "cmd/version.go"
                  ],
                  "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
                }
              ],
              [
                "@semantic-release/github",
                {
                  "successComment": false,
                  "failComment": false
                }
              ]
            ]
          }
          EOF

      - name: Create update script
        run: |
          mkdir -p .github/scripts
          cat > .github/scripts/update-files.sh << 'EOF'
          #!/bin/bash
          set -e
          
          VERSION=$1
          echo "Updating files to version ${VERSION}"
          
          # Update Homebrew formula
          if [ -f "Formula/tada.rb" ]; then
            sed -i -E "s/tag:[[:space:]]+\"[^\"]+\"/tag:      \"${VERSION}\"/" Formula/tada.rb
            echo "✅ Updated Formula/tada.rb"
          fi
          
          # Update VERSION file
          echo "${VERSION}" > VERSION
          echo "✅ Updated VERSION file"
          
          # Update version in Go code
          if [ -f "cmd/version.go" ]; then
            sed -i -E "s/Version = \"[^\"]+\"/Version = \"${VERSION}\"/" cmd/version.go
            echo "✅ Updated cmd/version.go"
          fi
          
          # Update version in main.go if exists
          if [ -f "main.go" ] && grep -q 'var version = ' main.go; then
            sed -i -E "s/var version = \"[^\"]*\"/var version = \"${VERSION}\"/" main.go
            echo "✅ Updated main.go"
          fi
          EOF
          chmod +x .github/scripts/update-files.sh

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release
